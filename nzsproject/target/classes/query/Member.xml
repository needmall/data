<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.needmall.client.member.dao.MemberDao">
	<select id="customerSecuritySelect" parameterType="String" resultType="security">
		select c_id, salt from membersecurity 
		where c_id = #{c_id}
	</select>
	<!-- ORA-00911: 문자가 부적합합니다 =>> ; 찍혀있었음 ↑ -->
	<select id="sellerSecuritySelect" parameterType="String" resultType="security">
		select s_id, salt from membersecurity
		where s_id = #{s_id}
	</select>	
	
	<insert id="customerSecurityInsert" parameterType="security">
		/* customerSecurity - "customerSecurityInsert" */
		<selectKey keyProperty="mc_num" resultType="int" order="BEFORE">
			select membersecurity_seq.nextval from dual
		</selectKey>
		insert into membersecurity(mc_num, c_id, salt)
		values(#{mc_num}, #{c_id}, #{salt})
	</insert>
	
	<insert id="sellerSecurityInsert" parameterType="security">
		/* sellerSecurity - "sellerSecurityInsert" */
		<selectKey keyProperty="mc_num" resultType="int" order="BEFORE">
			select membersecurity_seq.nextval from dual
		</selectKey>
		insert into membersecurity(mc_num, s_id, salt)
		values(#{mc_num}, #{s_id}, #{salt})
	</insert>
	
	<select id="customerIdSelect" parameterType="String" resultType="int">
		select count(c_num)
		from customer
		where c_id = #{c_id}
	</select>
	
	<select id="sellerIdSelect" parameterType="String" resultType="int">
		select count(s_num)
		from seller
		where s_id = #{s_id}
	</select>
	
	<insert id="customerInsert" parameterType="member">
		/* customer - "customerInsert" */
		<selectKey keyProperty="c_num" resultType="int" order="BEFORE">
			select customer_seq.nextval from dual
		</selectKey>
		insert into customer(c_num, cs_division, c_id, c_pwd, c_name, c_gender, c_birthday, c_address, c_mail, c_cell)
		values(#{c_num}, #{cs_division}, #{c_id}, #{c_pwd}, #{c_name}, #{c_gender}, #{c_birthday}, #{c_address}, #{c_mail}, #{c_cell})
	</insert>	
	
	<select id="reqstoreSelect" parameterType="String" resultType="join">
		select reqst_num, s_num, st_bnum, st_name, st_address, st_email, st_hours, st_cell, st_ceo
		from reqstore
		where st_bnum = #{st_bnum}
	</select>
	<!-- reqstore 에 없는 st_num 넣었더니 '부적합한 식별자' 뜸 -->
	
	<insert id="sellerInsert" parameterType="join">
		/* seller - "sellerInsert" */
		<selectKey keyProperty="s_num" resultType="int" order="BEFORE">
			select seller_seq.nextval from dual
		</selectKey>
		insert into seller(s_num, cs_division, s_id, s_pwd, s_name, s_gender, s_birthday, s_address, s_mail, s_phone, s_cell)
		values(#{s_num}, #{cs_division}, #{s_id}, #{s_pwd}, #{s_name}, #{s_gender}, #{s_birthday}, #{s_address}, #{s_mail}, #{s_phone}, #{s_cell})
	</insert>
	
	<insert id="reqstoreInsert" parameterType="join">
		/* store - "reqstoreInsert" */
		<selectKey keyProperty="s_num" resultType="int" order="BEFORE">
			select s_num from seller
			where s_id = #{s_id}
		</selectKey>
		insert into reqstore(reqst_num, s_num, st_bnum, st_name, st_address, st_email, st_hours, st_cell, st_ceo, st_date)
		values(reqstore_seq.nextval, #{s_num}, #{st_bnum}, #{st_name}, #{st_address}, #{st_email}, #{st_hours}, #{st_cell}, #{st_ceo}, sysdate)
	</insert>
	
	<insert id="customerAgreeInsert" parameterType="member">
		/* customer - "customerAgreeInsert" */
		insert into cinfo(cin_num, c_num, cin_sms, cin_email, cin_prov1, cin_prov2, cin_prov3, cin_prov4, cin_prov5, procin_num)
		values(cinfo_seq.nextval, #{c_num}, 1, 1, 1, 1, 1, 1, 1, 1)
	</insert>
	
	<insert id="sellerAgreeInsert" parameterType="join">
		/* seller - "sellerAgreeInsert" */
		insert into sinfo(sin_num, s_num, sin_sms, sin_email, sin_prov1, sin_prov2, sin_prov3, sin_prov4, sin_prov5, prosin_num)
		values(sinfo_seq.nextval, #{s_num}, 1, 1, 1, 1, 1, 1, 1, 1)
	</insert>
	
	<update id="customerDelete" parameterType="member">
		/* customer - "customerDelete" */
		update customer set cs_division = 2, c_pwd=0, c_name=0, c_gender=0, c_address=0, c_cell=0, c_lat=0, c_lon=0, c_update=sysdate
        where c_id=#{c_id}
	</update> 
	
	<update id="sellerDelete" parameterType="member">
		/* seller - "sellerDelete" */
		update seller
		set cs_division = 2, s_pwd=0, s_name=0, s_gender=0, s_address=0, s_cell=0, s_phone=0, s_mail=0
        where s_id=#{s_id}
	</update>
	
	<update id="reqStoreDelete" parameterType="join">
		/* seller - "reqStoreDelete" */
		update store
		set st_address = 0, st_email=0, st_hours=0, st_cell=0, st_ceo=0, st_update=sysdate
        where s_num=#{s_num}
	</update>
	
	<update id="customerUpdate" parameterType="member">
		update customer set
			<if test="c_pwd != null and c_pwd != ''">
				c_pwd=#{c_pwd},
			</if>
		c_address=#{c_address},
		c_mail=#{c_mail},
		c_cell=#{c_cell}
		where c_id=#{c_id}
	</update>
	
	<select id="customerSelect" parameterType="String" resultType="member">
		select c_num, cs_division, c_id, c_pwd, c_name, c_gender, c_address, c_mail, c_cell, c_birthday
		from customer
		where c_id = #{c_id}
	</select>
	
	<update id="sellerUpdate" parameterType="member">
		update seller set
			<if test="s_pwd != null and s_pwd != ''">
				s_pwd=#{s_pwd},
			</if>
		s_address=#{s_address},
		s_mail=#{s_mail},
		s_cell=#{s_cell}
		where s_id=#{s_id}
	</update>
	
	<select id="sellerSelect" parameterType="String" resultType="member">
		select s_num, cs_division, s_id, s_pwd, s_name, s_gender, s_address, s_mail, s_cell, s_birthday
		from seller
		where s_id = #{s_id}
	</select>
	
	<select id="customerIdIdenSelect" parameterType="member" resultType="String">
		select c_id
		from customer
		where c_name = #{c_name} and c_mail = #{c_mail}
	</select>
	
	<select id="sellerIdIdenSelect" parameterType="member" resultType="String">
		select s_id
		from seller
		where s_name = #{s_name} and s_mail = #{s_mail}
	</select>
	
	<select id="customerPwdSelect" parameterType="member" resultType="String">
		select c_pwd
		from customer
		where c_id = #{c_id} and c_mail = #{c_mail}
	</select>
	
	<update id="customerPwdFindUpdate" parameterType="member">
		update customer set c_pwd= #{c_pwd}
		where c_id= #{c_id} and c_mail= #{c_mail}
	</update>
	
	<select id="sellerPwdSelect" parameterType="member" resultType="String">
		select s_pwd
		from seller
		where s_id = #{s_id} and s_mail = #{s_mail}
	</select>
	
	<update id="sellerPwdFindUpdate" parameterType="member">
		update seller set s_pwd= #{s_pwd}
		where s_id= #{s_id} and s_mail= #{s_mail}
	</update>
	
</mapper>